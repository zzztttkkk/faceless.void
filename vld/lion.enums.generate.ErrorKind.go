// Code generated by "github.com/zzztttkkk/lion/enums", DO NOT EDIT
package vld

import "fmt"

func (ev ErrorKind) String() string {
	switch(ev){
		
		case ErrorKindMissingRequired : {
			return "MissingRequired"
		}
		
		case ErrorKindCustomFunc : {
			return "CustomFunc"
		}
		
		case ErrorKindIntLtMin : {
			return "IntLtMin"
		}
		
		case ErrorKindIntGtMax : {
			return "IntGtMax"
		}
		
		case ErrorKindIntNotInRange : {
			return "IntNotInRange"
		}
		
		case ErrorKindStringTooLong : {
			return "StringTooLong"
		}
		
		case ErrorKindStringTooShort : {
			return "StringTooShort"
		}
		
		case ErrorKindStringNotMatched : {
			return "StringNotMatched"
		}
		
		case ErrorKindStringNotInRanges : {
			return "StringNotInRanges"
		}
		
		case ErrorKindContainerSizeTooLarge : {
			return "ContainerSizeTooLarge"
		}
		
		case ErrorKindContainerSizeTooSmall : {
			return "ContainerSizeTooSmall"
		}
		
		default: {
			panic(fmt.Errorf("vld.ErrorKind: unknown enum value, %d", ev))
		} 
	}
}



func init(){
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindMissingRequired)
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindCustomFunc)
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindIntLtMin)
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindIntGtMax)
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindIntNotInRange)
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindStringTooLong)
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindStringTooShort)
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindStringNotMatched)
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindStringNotInRanges)
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindContainerSizeTooLarge)
	
	AllErrorKinds = append(AllErrorKinds, ErrorKindContainerSizeTooSmall)
	
}

